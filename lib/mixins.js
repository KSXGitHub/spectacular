// Generated by CoffeeScript 1.6.2
var __slice = [].slice,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

spectacular.HasAncestors = (function() {
  function HasAncestors() {}

  HasAncestors.prototype.ancestors = function() {
    var ancestors, parent;

    ancestors = [];
    parent = this.parent;
    while (parent) {
      ancestors.push(parent);
      parent = parent.parent;
    }
    return ancestors;
  };

  return HasAncestors;

})();

spectacular.HasCollection = function(plural, singular) {
  var ConcreteHasCollection, capitalizedPlural, capitalizedSingular, mixin;

  capitalizedSingular = singular.capitalize();
  capitalizedPlural = plural.capitalize();
  mixin = ConcreteHasCollection = (function() {
    function ConcreteHasCollection() {}

    ConcreteHasCollection.included = function(ctor) {
      return ctor["" + plural + "Scope"] = function(name, block) {
        return ctor.getter(name, function() {
          return this[plural].filter(block);
        });
      };
    };

    return ConcreteHasCollection;

  })();
  mixin.prototype["add" + capitalizedSingular] = function() {
    var item, items, _i, _len, _results;

    items = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    _results = [];
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      item = items[_i];
      if (__indexOf.call(this[plural], item) < 0) {
        _results.push(this[plural].push(item));
      }
    }
    return _results;
  };
  mixin.prototype["remove" + capitalizedSingular] = function() {
    var item, items, newArray, _i, _len, _ref;

    items = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    newArray = [];
    _ref = this[plural];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      if (__indexOf.call(items, item) < 0) {
        newArray.push(item);
      }
    }
    return this[plural] = newArray;
  };
  mixin.prototype["" + singular + "At"] = function(index) {
    return this[plural][index];
  };
  mixin.prototype["find" + capitalizedSingular] = mixin.prototype["indexOf" + capitalizedSingular] = function(item) {
    return this[plural].indexOf(item);
  };
  mixin.prototype["has" + capitalizedSingular] = mixin.prototype["contains" + capitalizedSingular] = function(item) {
    return this[plural].indexOf(item) !== -1;
  };
  mixin.prototype["" + plural + "Length"] = mixin.prototype["" + plural + "Size"] = mixin.prototype["" + plural + "Count"] = function() {
    return this[plural].length;
  };
  return mixin;
};

spectacular.HasNestedCollection = function(name, options) {
  var ConcreteHasNestedCollection, mixin, through;

  if (options == null) {
    options = {};
  }
  through = options.through;
  if (through == null) {
    throw new Error('missing through option');
  }
  mixin = ConcreteHasNestedCollection = (function() {
    function ConcreteHasNestedCollection() {}

    ConcreteHasNestedCollection.included = function(ctor) {
      ctor["" + name + "Scope"] = function(scopeName, block) {
        return ctor.getter(scopeName, function() {
          return this[name].filter(block);
        });
      };
      return ctor.getter(name, function() {
        var items;

        items = [];
        this[through].forEach(function(item) {
          items.push(item);
          if (item[name] != null) {
            return items = items.concat(item[name]);
          }
        });
        return items;
      });
    };

    return ConcreteHasNestedCollection;

  })();
  return mixin;
};

spectacular.FollowUpProperty = function(property) {
  var ConcreteFollowUpProperty, capitalizedProperty, privateProperty;

  capitalizedProperty = property.capitalize();
  privateProperty = "own" + capitalizedProperty;
  return ConcreteFollowUpProperty = (function() {
    function ConcreteFollowUpProperty() {}

    ConcreteFollowUpProperty.included = function(ctor) {
      return ctor.getter(property, function() {
        var _ref;

        return this[privateProperty] || ((_ref = this.parent) != null ? _ref[property] : void 0);
      });
    };

    return ConcreteFollowUpProperty;

  })();
};

spectacular.MergeUpProperty = function(property) {
  var ConcreteMergeUpProperty, capitalizedProperty, privateProperty;

  capitalizedProperty = property.capitalize();
  privateProperty = "own" + capitalizedProperty;
  return ConcreteMergeUpProperty = (function() {
    function ConcreteMergeUpProperty() {}

    ConcreteMergeUpProperty.included = function(ctor) {
      return ctor.getter(property, function() {
        var a;

        a = this[privateProperty];
        if (this.parent != null) {
          a = this.parent[property].concat(a);
        }
        return a;
      });
    };

    return ConcreteMergeUpProperty;

  })();
};

spectacular.Describable = (function() {
  function Describable() {}

  Describable.included = function(ctor) {
    return ctor.getter('description', function() {
      var space, _ref;

      if (((_ref = this.parent) != null ? _ref.description : void 0) != null) {
        space = '';
        if (!this.noSpaceBeforeDescription) {
          space = ' ';
        }
        return "" + this.parent.description + space + this.ownDescription;
      } else {
        return this.ownDescription;
      }
    });
  };

  return Describable;

})();

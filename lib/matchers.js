// Generated by CoffeeScript 1.6.2
exports.exist = {
  assert: function(actual, notText) {
    this.description = "should" + notText + " exist";
    this.message = "Expected " + actual + notText + " to exist";
    return actual != null;
  }
};

exports.be = function(state) {
  return {
    assert: function(actual, notText) {
      this.description = "should" + notText + " be " + state;
      this.message = ("Expected " + actual + "." + state + notText + "      to be true but was " + actual[state]).replace(/\s+/g, ' ');
      return actual[state];
    }
  };
};

exports.compare = function(actual, value, matcher, noMessage) {
  var i, k, v, _i, _j, _len, _len1;

  if (noMessage == null) {
    noMessage = false;
  }
  if (typeof actual === 'object') {
    if (Object.prototype.toString.call(actual) === '[object Array]') {
      for (i = _i = 0, _len = actual.length; _i < _len; i = ++_i) {
        v = actual[i];
        if (!exports.compare(v, value[i], true)) {
          return false;
        }
      }
    } else {
      for (v = _j = 0, _len1 = actual.length; _j < _len1; v = ++_j) {
        k = actual[v];
        if (!exports.compare(v, value[k], true)) {
          return false;
        }
      }
    }
  } else {
    return actual === value;
  }
};

exports.equal = function(value) {
  return {
    assert: function(actual, notText) {
      this.description = "should" + notText + " be equal to " + value;
      this.message = "Expected " + actual + notText + " to be equal to " + value;
      return exports.compare(actual, value, this);
    }
  };
};
